/*
 * Copyright (c) 2017 Armel Soro
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    ext {
        kotlinVersion = '1.3.50'
        springBootVersion = '2.1.9.RELEASE'
        jacksonVersion = '2.9.0'
        graphqlSpringBootStarterVersion = '4.0.0'
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.10.RELEASE'
    }
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.rm3l'
version = '0.2.0'
sourceCompatibility = 11
compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

repositories {
    mavenCentral()
    jcenter() //Needed for khttp, but may be dropped once we have this included transitively from the 'library' project
}

dependencies {
    compile project(':service-names-port-numbers-library')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile 'com.github.ben-manes.caffeine:caffeine:2.6.0'
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${jacksonVersion}"
    runtime('org.springframework.boot:spring-boot-devtools')
    optional "org.springframework.boot:spring-boot-configuration-processor" //requires 'propdeps 'plugin
    compile "com.graphql-java:graphql-spring-boot-starter:${graphqlSpringBootStarterVersion}"
    // to embed GraphiQL tool
    compile "com.graphql-java:graphiql-spring-boot-starter:${graphqlSpringBootStarterVersion}"
    compile "com.graphql-java:graphql-java-tools:4.3.0"
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}

compileJava.dependsOn(processResources)

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
